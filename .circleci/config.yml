version: 2.1
orbs:
  node: circleci/node@5.1.0
  docker: circleci/docker@1.0.0

executors:
  dotnet-executor:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

jobs:

  build-docker-image:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0

    working_directory: ~/circleCI_Selenium_Demo

    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - docker/install-docker-tools
      - setup_remote_docker:
          docker_layer_caching: true
           
      - run:

          name: Install latest version of ChromeDriver Sample

          command: |

            sudo wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -

            sudo sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'

            sudo apt-get update

            sudo apt-get install google-chrome-unstable
            
      - run:

          name: Install latest version of ChromeDriver Sample

          command: |

            sudo wget https://chromedriver.storage.googleapis.com/2.31/chromedriver_linux64.zip

            sudo unzip -o chromedriver_linux64.zip

            sudo rm chromedriver_linux64.zip

            sudo mv chromedriver /usr/bin/

            sudo chmod 777 /usr/bin/chromedriver

            sudo apt-get install libxi6 libgconf-2-4

            sudo apt-get -y install xvfb gtk2-engines-pixbuf

            sudo apt-get -y install xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable

            sudo apt-get install xvfb

            sudo apt-get -y install imagemagick x11-apps

      - run:
            name: Build and push Docker image
            command: |
              docker build -t circleci/node:14 .
              docker login -u $CristiRcr -p $#CT02glcv
              docker push circleci/node:14

  test:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0

    steps:
      # Start with the initial build
      - attach_workspace:
          at: ~/dissertation-environment/BehavioursIntegrationConnectGOOGLE/

      # Install Testmo CLI tool
      - run: npm install --no-save @testmo/testmo-cli

      # Run tests and report results to Testmo
      - run:
          command: |
            npx testmo automation:run:submit \
              --instance "$https://github.com/CristianRucareanu/dissertation-environment.git" \
              --project-id 1 \
              --name "C# test run" \
              --source "unit-tests" \
              --results results/*.xml \
              -- npm run csharp-selenium # Note space after --

# Store test artifacts and results
      - store_artifacts:
          path: results
          destination: test_results
      - store_test_results:
          path: results

workflows:
  test-and-deploy:
    jobs:
      - build-docker-image
      - test:
          requires:
            - build-docker-image
          context:
            - testmo